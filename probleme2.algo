/* solution 1*/
ALGORITHM Element 
VAR
    tab1, tab2: ARRAY_OF INTEGER;
    i, j,: INTEGER; 
    sum: INTEGER :=0 ;
    found : BOOLEAN ;
    str: string 

BEGIN
    FOR i FROM 0 TO tab1.length-1 DO
        found := FALSE;
        FOR j FROM 0 TO tab2.length-1 DO
            IF(tab1[i] = tab2[j]) THEN
                found := TRUE;
                BREAK;
            END
        END_FOR
        IF (found) THEN
            sum := sum + tab1[i];
        END_IF
    END_FOR 
    FOR i FROM 0 TO tab2.length-1 DO
        found := FALSE;
        FOR j FROM 0 TO tab1.length-1 DO
            IF(tab2[i] = tab1[j]) THEN
                found := TRUE;
                BREAK;
            END
        END_FOR
        IF (found) THEN
            sum := sum + tab2[i];
        END_IF
    END_FOR

    Write(sum);
END

/*solution 2*/

ALGORITHM hash-tab
VAR
   keys : ARRAY_OF INTEGER[40];
   tab1 , tab2 : Array_Of integer[20];
    htab : HASH_TABLE<INTEGER,INTEGER>;
   i, j,k, sum : INTEGER;
  
  
BEGIN
for i from 0 to tab1.length -1 do 
 for i from 0 to tab2.length -1 do 
    read tab1[i]
    read tab2[i]
End for 
 
 FOR i FROM 0 TO tab1.length -1 STEP 1  DO
        IF (htab.lookup(tab1[i]) = false) THEN
            k := hatb.get(tab1[i]);
            htab.insert(tab1[i],k+1);
        ELSE
            htab.insert(tab1[i],1);
        END_IF
    END_FOR

    FOR i FROM 0 TO tab2.length -1 STEP 1  DO
        IF (htab.lookup(tab2[i]) = false) THEN
            k := htab.get(tab2[i]);
            htab.insert(tab2[i],k+1);
        ELSE
            htab.insert(tab2[i],1);
        END_IF
    END_FOR
     
     keys := dict.getKeys();
    FOR i FROM 0 TO keys.length -1 STEP 1  DO
        IF (hash.get(keys[i]) = 1) THEN
            sum := sum +keys[i];
        END_IF
    END_FOR
